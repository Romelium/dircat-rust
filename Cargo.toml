[package]
name = "dircat"
version = "0.5.0"
edition = "2021"
description = "High-performance Rust utility that concatenates and displays directory contents, similar to the C++ DirCat."
authors = ["Romelium author@romelium.com>"]
license = "MIT"
repository = "https://github.com/romelium/dircat-rust"
readme = "README.md"
keywords = ["cli", "ai", "cat", "utility", "llm"]
categories = ["command-line-utilities"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# --- Caching ---
directories = "5.0"
# --- Core Functionality & Utilities ---
# Filesystem traversal (recursive)
walkdir = "2.5"
# Regex matching for filtering
regex = "1.12"
# .gitignore handling (respecting ignore rules)
ignore = "0.4" # Note: Integrates well with walkdir
# Parsing human-readable byte sizes (e.g., "1M", "512k")
byte-unit = "5.1"
# Glob pattern matching (for --process-last)
glob = "0.3"
# Static Regex compilation helper
once_cell = "1.21"
# Content type detection (text vs binary)
content_inspector = "0.2"

# --- Git Repository Cloning ---
# Enables cloning remote git repos given as input
git2 = { version = "0.20", features = ["vendored-libgit2", "vendored-openssl"] }
# Hashing for creating cache directory names
sha2 = "0.10"
hex = "0.4"

# --- Performance ---
# Parallel iteration/processing
rayon = "1.11"
# Parallel directory walking (used by ignore crate)
# Channel for discovery producer/consumer
crossbeam-channel = "0.5"

# --- Command Line Interface ---
# Argument parsing
clap = { version = "4.5", features = ["derive", "cargo"] } # Enable derive macro and cargo env vars

# --- Error Handling ---
# Application-level error handling (simpler Result management)
anyhow = "1.0"
# Deriving std::error::Error for custom error types
thiserror = "1.0"

# --- Concurrency & Signals ---
# Ctrl+C / Signal handling for graceful shutdown
ctrlc = { version = "3.5", features = ["termination"] } # termination feature simplifies setup

# --- Input/Output & Formatting ---
# (Using std::fs, std::io, std::path primarily)
# For cross-platform clipboard access (-p/--paste option)
arboard = "3.6"
# For displaying progress bars during long operations
indicatif = "0.17"

# --- Logging (Optional but Recommended) ---
# Logging facade
log = "0.4"
# Simple logger implementation controlled by RUST_LOG env var
env_logger = "0.11"
# Tracing facade (added for regex.rs instrumentation)
tracing = "0.1"
tempfile = "3.23"

# --- Platform Specific (If needed later) ---
# Example: Might need platform-specific crates for certain features if std lib isn't enough
# [target.'cfg(windows)'.dependencies]
# winapi = "0.3"
# [target.'cfg(unix)'.dependencies]
# libc = "0.2"

[[bin]]
name = "dircat"
path = "src/main.rs"

# Dependencies for running tests and benchmarks
[dev-dependencies]
# Integration testing CLI applications
assert_cmd = "2.1"
# Assertions for assert_cmd output/status
predicates = "3.1"
# Creating temporary files/directories for tests
tempfile = "3.23"
# Benchmarking harness
criterion = { version = "0.5", features = ["html_reports"] }
# For capturing stdout in tests (optional)
# gag = "1.0"
